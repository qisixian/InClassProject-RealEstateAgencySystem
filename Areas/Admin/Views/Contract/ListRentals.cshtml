
@model RentalContractListViewModel

@{

    // nested layout view
    Layout = "_ContractNavbar";

    ViewData["Title"] = " | Manage Contracts";
    
    RentalContractGridData current = Model.CurrentRoute;
    GridData routes = Model.CurrentRoute.Clone();
}




<li class="list-group-item">
    <h5 class="mt-1"><a asp-action="Add">Add a Rental Contract</a></h5>
</li>

@* <a href="@Url.Action("Add", "Book")" class="btn btn-primary">Create Contract</a> *@
 
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>RentalContractID</th>
            <th>OwnerCustomerID</th>
            <th>TenantCustomerID</th>
            <th>PropertyID</th>
            <th>ContractTerms</th>
            <th>
                @{ routes.SetSortAndDirection(
                    nameof(RentalContract.RentalPrice), current); }
                <a asp-action="ListRentals" 
                    asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">RentalPrice&nbsp;<i class="bi bi-arrows-vertical"></i></a>
                
            </th>
            <th>
                @{ routes.SetSortAndDirection(
                    nameof(RentalContract.DepositPrice), current); }
                <a asp-action="ListRentals" 
                    asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">DepositPrice&nbsp;<i class="bi bi-arrows-vertical"></i></a>
                
            </th>
            <th>
                @{ routes.SetSortAndDirection(
                    nameof(RentalContract.StartDate), current); }
                <a asp-action="ListRentals" 
                    asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">StartDate&nbsp;<i class="bi bi-arrows-vertical"></i></a>
            </th>
            <th>
                @{ routes.SetSortAndDirection(
                    nameof(RentalContract.EndDate), current); }
                <a asp-action="ListRentals" 
                    asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">EndDate&nbsp;<i class="bi bi-arrows-vertical"></i></a>
            </th>
            <th>IsFinalized</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var RentalContract in Model.RentalContracts)
        {
            <tr>
                <td>@RentalContract.RentalContractID</td>
                <td>@RentalContract.OwnerCustomerID</td>
                <td>@RentalContract.TenantCustomerID</td>
                <td>@RentalContract.PropertyID</td>
                <td>@RentalContract.ContractTerms</td>
                <td>@RentalContract.RentalPrice</td>
                <td>@RentalContract.DepositPrice</td>
                <td>@RentalContract.StartDate</td>
                <td>@RentalContract.EndDate</td>
                <td>@RentalContract.IsFinalized</td>
                <td>
                    <a href="@Url.Action("Edit", "Book", new { id = RentalContract.RentalContractID })" class="btn btn-sm btn-info">Edit</a>
                    <form asp-action="Delete" asp-controller="Book" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@RentalContract.RentalContractID" />
                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


@* paging links *@
@{
    @* Reset to the current route values. This is necessary to clear the changes made while 
        creating the sorting links above. *@
    routes = current.Clone();

    for (int i = 1; i <= Model.TotalPages; i++)
    {
        routes.PageNumber = i;
        string active = @Nav.Active(i, current.PageNumber);
        <a asp-action="ListSales" asp-all-route-data="@routes.ToDictionary()"
           class="btn btn-outline-primary @active">@i</a>
    }
}