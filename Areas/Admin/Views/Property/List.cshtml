@model PropertyListViewModel

@{
    ViewData["Title"] = " | Manage Properties";

    PropertyGridData current = Model.CurrentRoute;
    GridData routes = Model.CurrentRoute.Clone();
}

<h1 class="mb-2">Manage Properties</h1>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>PropertyId</th>
            <th>PropertyAddress</th>
            <th>City</th>
            <th>Province</th>
            <th>Country</th>
            <th>PostalCode</th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.PropertyType), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">PropertyType&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.BuildYear), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">BuildYear&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.SizeOfHouse), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">SizeOfHouse&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.Bedrooms), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">Bedrooms&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.Bathrooms), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">Bathrooms&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.CurrentStatus), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">CurrentStatus&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.ListingDate), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">ListingDate&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.RentalPrice), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">RentalPrice&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>
                @{
                    routes.SetSortAndDirection(
                    nameof(Property.SellingPrice), current);
                }
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()"
                    class="text-decoration-none">SellingPrice&nbsp;<i class="bi bi-arrows-vertical"></i></a>

            </th>
            <th>Description</th>
            <th>OwnerCustomerId</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Property in Model.Properties)
        {
            <tr>
                <td>@Property.PropertyId</td>
                <td>@Property.PropertyAddress</td>
                <td>@Property.City</td>
                <td>@Property.Province</td>
                <td>@Property.Country</td>
                <td>@Property.PostalCode</td>
                <td>@Property.PropertyType</td>
                <td>@Property.BuildYear</td>
                <td>@Property.SizeOfHouse</td>
                <td>@Property.Bedrooms</td>
                <td>@Property.Bathrooms</td>
                <td>@Property.CurrentStatus</td>
                <td>@Property.ListingDate</td>
                <td>@Property.RentalPrice</td>
                <td>@Property.SellingPrice</td>
                <td>@Property.Description</td>
                <td>@Property.OwnerCustomerId</td>
                <td>
                    <div class="d-inline-flex align-items-center gap-1">
                        <a href="@Url.Action("Edit", "Property", new { id = Property.PropertyId })"
                            class="btn btn-sm btn-info"><i class="bi bi-pencil"></i>Edit</a>
                        <form asp-action="Delete" asp-controller="Property" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@Property.PropertyId" />
                            <input type="hidden" name="redirectTo" value="Admin" />
                            <button type="submit" class="btn btn-sm btn-danger"><i class="bi bi-trash"></i>Delete</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


@* paging links *@
@{
    routes = current.Clone();

    for (int i = 1; i <= Model.TotalPages; i++)
    {
        routes.PageNumber = i;
        string active = @Nav.Active(i, current.PageNumber);
        <a asp-action="List" asp-all-route-data="@routes.ToDictionary()" class="btn btn-outline-primary @active">@i</a>
    }
}