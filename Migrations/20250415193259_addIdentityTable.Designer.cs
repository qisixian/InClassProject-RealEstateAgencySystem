// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateAgencySystem.Models;

#nullable disable

namespace RealEstateAgencySystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250415193259_addIdentityTable")]
    partial class addIdentityTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ContactAddress = "2598 K St, Surrey, BC, Canada",
                            Email = "customer1@example.com",
                            Name = "John Smith",
                            Password = "Password123!",
                            Phone = "979-508-1377",
                            PostalCode = "V4O2X6"
                        },
                        new
                        {
                            CustomerId = 2,
                            ContactAddress = "1528 T St, North Vancouver, BC, Canada",
                            Email = "customer2@example.com",
                            Name = "Emily Johnson",
                            Password = "Password123!",
                            Phone = "462-169-8414",
                            PostalCode = "V4W7E8"
                        },
                        new
                        {
                            CustomerId = 3,
                            ContactAddress = "418 B St, Vancouver, BC, Canada",
                            Email = "customer3@example.com",
                            Name = "Michael Williams",
                            Password = "Password123!",
                            Phone = "228-891-3402",
                            PostalCode = "V7K5K7"
                        },
                        new
                        {
                            CustomerId = 4,
                            ContactAddress = "5486 S St, Burnaby, BC, Canada",
                            Email = "customer4@example.com",
                            Name = "Sarah Brown",
                            Password = "Password123!",
                            Phone = "482-265-9080",
                            PostalCode = "V5U1H7"
                        },
                        new
                        {
                            CustomerId = 5,
                            ContactAddress = "4737 F St, Delta, BC, Canada",
                            Email = "customer5@example.com",
                            Name = "David Miller",
                            Password = "Password123!",
                            Phone = "137-226-4669",
                            PostalCode = "V6Z1H7"
                        },
                        new
                        {
                            CustomerId = 6,
                            ContactAddress = "9997 I St, Langley, BC, Canada",
                            Email = "customer6@example.com",
                            Name = "Jessica Davis",
                            Password = "Password123!",
                            Phone = "243-717-3767",
                            PostalCode = "V2Z4W4"
                        },
                        new
                        {
                            CustomerId = 7,
                            ContactAddress = "7689 T St, Surrey, BC, Canada",
                            Email = "customer7@example.com",
                            Name = "James Wilson",
                            Password = "Password123!",
                            Phone = "321-447-9284",
                            PostalCode = "V5F1J5"
                        },
                        new
                        {
                            CustomerId = 8,
                            ContactAddress = "8630 M St, Coquitlam, BC, Canada",
                            Email = "customer8@example.com",
                            Name = "Laura Martinez",
                            Password = "Password123!",
                            Phone = "390-132-7432",
                            PostalCode = "V2V4E9"
                        },
                        new
                        {
                            CustomerId = 9,
                            ContactAddress = "2318 G St, Burnaby, BC, Canada",
                            Email = "customer9@example.com",
                            Name = "Robert Anderson",
                            Password = "Password123!",
                            Phone = "492-452-1205",
                            PostalCode = "V1H6W9"
                        },
                        new
                        {
                            CustomerId = 10,
                            ContactAddress = "4481 G St, West Vancouver, BC, Canada",
                            Email = "customer10@example.com",
                            Name = "Sophia Thomas",
                            Password = "Password123!",
                            Phone = "617-716-2877",
                            PostalCode = "V4B3V2"
                        },
                        new
                        {
                            CustomerId = 11,
                            ContactAddress = "1476 W St, Surrey, BC, Canada",
                            Email = "customer11@example.com",
                            Name = "Daniel Taylor",
                            Password = "Password123!",
                            Phone = "216-161-4384",
                            PostalCode = "V8K7E2"
                        },
                        new
                        {
                            CustomerId = 12,
                            ContactAddress = "172 N St, Burnaby, BC, Canada",
                            Email = "customer12@example.com",
                            Name = "Olivia Moore",
                            Password = "Password123!",
                            Phone = "570-405-3330",
                            PostalCode = "V9B4J1"
                        },
                        new
                        {
                            CustomerId = 13,
                            ContactAddress = "3619 O St, Delta, BC, Canada",
                            Email = "customer13@example.com",
                            Name = "Matthew Jackson",
                            Password = "Password123!",
                            Phone = "879-325-6126",
                            PostalCode = "V9H4G4"
                        },
                        new
                        {
                            CustomerId = 14,
                            ContactAddress = "1113 H St, West Vancouver, BC, Canada",
                            Email = "customer14@example.com",
                            Name = "Isabella White",
                            Password = "Password123!",
                            Phone = "605-550-2527",
                            PostalCode = "V8Y4F9"
                        },
                        new
                        {
                            CustomerId = 15,
                            ContactAddress = "2932 U St, North Vancouver, BC, Canada",
                            Email = "customer15@example.com",
                            Name = "Christopher Harris",
                            Password = "Password123!",
                            Phone = "846-746-5253",
                            PostalCode = "V4Y1Z3"
                        },
                        new
                        {
                            CustomerId = 16,
                            ContactAddress = "1327 R St, Langley, BC, Canada",
                            Email = "customer16@example.com",
                            Name = "Emma Martin",
                            Password = "Password123!",
                            Phone = "251-627-3358",
                            PostalCode = "V8D6I3"
                        },
                        new
                        {
                            CustomerId = 17,
                            ContactAddress = "9705 I St, Surrey, BC, Canada",
                            Email = "customer17@example.com",
                            Name = "Joshua Thompson",
                            Password = "Password123!",
                            Phone = "627-854-5716",
                            PostalCode = "V5E2Y3"
                        },
                        new
                        {
                            CustomerId = 18,
                            ContactAddress = "1536 O St, Coquitlam, BC, Canada",
                            Email = "customer18@example.com",
                            Name = "Ava Garcia",
                            Password = "Password123!",
                            Phone = "857-909-2250",
                            PostalCode = "V3A2E5"
                        },
                        new
                        {
                            CustomerId = 19,
                            ContactAddress = "656 W St, Langley, BC, Canada",
                            Email = "customer19@example.com",
                            Name = "Andrew Lee",
                            Password = "Password123!",
                            Phone = "919-882-3139",
                            PostalCode = "V4Y6B6"
                        },
                        new
                        {
                            CustomerId = 20,
                            ContactAddress = "7978 P St, West Vancouver, BC, Canada",
                            Email = "customer20@example.com",
                            Name = "Mia Robinson",
                            Password = "Password123!",
                            Phone = "389-296-1564",
                            PostalCode = "V1B4A3"
                        });
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("PropertyID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageID");

                    b.HasIndex("PropertyID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageID = 1,
                            ContentType = "image/jpeg",
                            FileName = "property_1_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 1
                        },
                        new
                        {
                            ImageID = 2,
                            ContentType = "image/jpeg",
                            FileName = "property_1_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 1
                        },
                        new
                        {
                            ImageID = 3,
                            ContentType = "image/jpeg",
                            FileName = "property_1_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 1
                        },
                        new
                        {
                            ImageID = 4,
                            ContentType = "image/jpeg",
                            FileName = "property_2_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 2
                        },
                        new
                        {
                            ImageID = 5,
                            ContentType = "image/jpeg",
                            FileName = "property_2_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 2
                        },
                        new
                        {
                            ImageID = 6,
                            ContentType = "image/jpeg",
                            FileName = "property_2_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 2
                        },
                        new
                        {
                            ImageID = 7,
                            ContentType = "image/jpeg",
                            FileName = "property_3_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 3
                        },
                        new
                        {
                            ImageID = 8,
                            ContentType = "image/jpeg",
                            FileName = "property_3_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 3
                        },
                        new
                        {
                            ImageID = 9,
                            ContentType = "image/jpeg",
                            FileName = "property_3_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 3
                        },
                        new
                        {
                            ImageID = 10,
                            ContentType = "image/jpeg",
                            FileName = "property_4_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 4
                        },
                        new
                        {
                            ImageID = 11,
                            ContentType = "image/jpeg",
                            FileName = "property_4_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 4
                        },
                        new
                        {
                            ImageID = 12,
                            ContentType = "image/jpeg",
                            FileName = "property_4_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 4
                        },
                        new
                        {
                            ImageID = 13,
                            ContentType = "image/jpeg",
                            FileName = "property_5_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 5
                        },
                        new
                        {
                            ImageID = 14,
                            ContentType = "image/jpeg",
                            FileName = "property_5_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 5
                        },
                        new
                        {
                            ImageID = 15,
                            ContentType = "image/jpeg",
                            FileName = "property_5_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 5
                        },
                        new
                        {
                            ImageID = 16,
                            ContentType = "image/jpeg",
                            FileName = "property_6_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 6
                        },
                        new
                        {
                            ImageID = 17,
                            ContentType = "image/jpeg",
                            FileName = "property_6_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 6
                        },
                        new
                        {
                            ImageID = 18,
                            ContentType = "image/jpeg",
                            FileName = "property_6_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 6
                        },
                        new
                        {
                            ImageID = 19,
                            ContentType = "image/jpeg",
                            FileName = "property_7_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 7
                        },
                        new
                        {
                            ImageID = 20,
                            ContentType = "image/jpeg",
                            FileName = "property_7_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 7
                        },
                        new
                        {
                            ImageID = 21,
                            ContentType = "image/jpeg",
                            FileName = "property_7_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 7
                        },
                        new
                        {
                            ImageID = 22,
                            ContentType = "image/jpeg",
                            FileName = "property_8_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 8
                        },
                        new
                        {
                            ImageID = 23,
                            ContentType = "image/jpeg",
                            FileName = "property_8_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 8
                        },
                        new
                        {
                            ImageID = 24,
                            ContentType = "image/jpeg",
                            FileName = "property_8_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 8
                        },
                        new
                        {
                            ImageID = 25,
                            ContentType = "image/jpeg",
                            FileName = "property_9_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 9
                        },
                        new
                        {
                            ImageID = 26,
                            ContentType = "image/jpeg",
                            FileName = "property_9_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 9
                        },
                        new
                        {
                            ImageID = 27,
                            ContentType = "image/jpeg",
                            FileName = "property_9_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 9
                        },
                        new
                        {
                            ImageID = 28,
                            ContentType = "image/jpeg",
                            FileName = "property_10_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 10
                        },
                        new
                        {
                            ImageID = 29,
                            ContentType = "image/jpeg",
                            FileName = "property_10_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 10
                        },
                        new
                        {
                            ImageID = 30,
                            ContentType = "image/jpeg",
                            FileName = "property_10_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 10
                        },
                        new
                        {
                            ImageID = 31,
                            ContentType = "image/jpeg",
                            FileName = "property_11_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 11
                        },
                        new
                        {
                            ImageID = 32,
                            ContentType = "image/jpeg",
                            FileName = "property_11_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 11
                        },
                        new
                        {
                            ImageID = 33,
                            ContentType = "image/jpeg",
                            FileName = "property_11_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 11
                        },
                        new
                        {
                            ImageID = 34,
                            ContentType = "image/jpeg",
                            FileName = "property_12_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 12
                        },
                        new
                        {
                            ImageID = 35,
                            ContentType = "image/jpeg",
                            FileName = "property_12_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 12
                        },
                        new
                        {
                            ImageID = 36,
                            ContentType = "image/jpeg",
                            FileName = "property_12_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 12
                        },
                        new
                        {
                            ImageID = 37,
                            ContentType = "image/jpeg",
                            FileName = "property_13_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 13
                        },
                        new
                        {
                            ImageID = 38,
                            ContentType = "image/jpeg",
                            FileName = "property_13_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 13
                        },
                        new
                        {
                            ImageID = 39,
                            ContentType = "image/jpeg",
                            FileName = "property_13_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 13
                        },
                        new
                        {
                            ImageID = 40,
                            ContentType = "image/jpeg",
                            FileName = "property_14_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 14
                        },
                        new
                        {
                            ImageID = 41,
                            ContentType = "image/jpeg",
                            FileName = "property_14_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 14
                        },
                        new
                        {
                            ImageID = 42,
                            ContentType = "image/jpeg",
                            FileName = "property_14_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 14
                        },
                        new
                        {
                            ImageID = 43,
                            ContentType = "image/jpeg",
                            FileName = "property_15_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 15
                        },
                        new
                        {
                            ImageID = 44,
                            ContentType = "image/jpeg",
                            FileName = "property_15_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 15
                        },
                        new
                        {
                            ImageID = 45,
                            ContentType = "image/jpeg",
                            FileName = "property_15_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 15
                        },
                        new
                        {
                            ImageID = 46,
                            ContentType = "image/jpeg",
                            FileName = "property_16_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 16
                        },
                        new
                        {
                            ImageID = 47,
                            ContentType = "image/jpeg",
                            FileName = "property_16_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 16
                        },
                        new
                        {
                            ImageID = 48,
                            ContentType = "image/jpeg",
                            FileName = "property_16_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 16
                        },
                        new
                        {
                            ImageID = 49,
                            ContentType = "image/jpeg",
                            FileName = "property_17_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 17
                        },
                        new
                        {
                            ImageID = 50,
                            ContentType = "image/jpeg",
                            FileName = "property_17_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 17
                        },
                        new
                        {
                            ImageID = 51,
                            ContentType = "image/jpeg",
                            FileName = "property_17_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 17
                        },
                        new
                        {
                            ImageID = 52,
                            ContentType = "image/jpeg",
                            FileName = "property_18_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 18
                        },
                        new
                        {
                            ImageID = 53,
                            ContentType = "image/jpeg",
                            FileName = "property_18_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 18
                        },
                        new
                        {
                            ImageID = 54,
                            ContentType = "image/jpeg",
                            FileName = "property_18_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 18
                        },
                        new
                        {
                            ImageID = 55,
                            ContentType = "image/jpeg",
                            FileName = "property_19_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 19
                        },
                        new
                        {
                            ImageID = 56,
                            ContentType = "image/jpeg",
                            FileName = "property_19_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 19
                        },
                        new
                        {
                            ImageID = 57,
                            ContentType = "image/jpeg",
                            FileName = "property_19_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 19
                        },
                        new
                        {
                            ImageID = 58,
                            ContentType = "image/jpeg",
                            FileName = "property_20_image_2.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 20
                        },
                        new
                        {
                            ImageID = 59,
                            ContentType = "image/jpeg",
                            FileName = "property_20_image_3.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 20
                        },
                        new
                        {
                            ImageID = 60,
                            ContentType = "image/jpeg",
                            FileName = "property_20_image_1.jpg",
                            ImageData = new byte[] { 255, 216, 255, 224 },
                            PropertyID = 20
                        });
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bathrooms")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListingDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerCustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RentalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<double>("SizeOfHouse")
                        .HasColumnType("REAL");

                    b.HasKey("PropertyID");

                    b.HasIndex("OwnerCustomerID");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyID = 1,
                            Bathrooms = 2,
                            Bedrooms = 4,
                            BuildYear = 1992,
                            City = "Vancouver",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful Apartment in a great neighborhood. Built in 2018.",
                            ListingDate = new DateTime(2025, 4, 2, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(7960),
                            OwnerCustomerID = 8,
                            PostalCode = "V4F3L2",
                            PropertyAddress = "5322 D Ave",
                            PropertyType = "Apartment",
                            Province = "BC",
                            RentalPrice = 4107m,
                            SizeOfHouse = 2633.0
                        },
                        new
                        {
                            PropertyID = 2,
                            Bathrooms = 4,
                            Bedrooms = 2,
                            BuildYear = 2006,
                            City = "Surrey",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful House in a great neighborhood. Built in 2012.",
                            ListingDate = new DateTime(2025, 4, 9, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8840),
                            OwnerCustomerID = 9,
                            PostalCode = "V5P8C4",
                            PropertyAddress = "6872 J Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            RentalPrice = 4308m,
                            SizeOfHouse = 2627.0
                        },
                        new
                        {
                            PropertyID = 3,
                            Bathrooms = 3,
                            Bedrooms = 3,
                            BuildYear = 2017,
                            City = "New Westminster",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Duplex in a great neighborhood. Built in 2011.",
                            ListingDate = new DateTime(2025, 3, 21, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8850),
                            OwnerCustomerID = 3,
                            PostalCode = "V9P5D6",
                            PropertyAddress = "7818 B Ave",
                            PropertyType = "House",
                            Province = "BC",
                            SellingPrice = 1497239m,
                            SizeOfHouse = 4702.0
                        },
                        new
                        {
                            PropertyID = 4,
                            Bathrooms = 1,
                            Bedrooms = 5,
                            BuildYear = 2022,
                            City = "Coquitlam",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful House in a great neighborhood. Built in 1980.",
                            ListingDate = new DateTime(2025, 4, 1, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8860),
                            OwnerCustomerID = 20,
                            PostalCode = "V4K2Z1",
                            PropertyAddress = "5392 N Ave",
                            PropertyType = "Apartment",
                            Province = "BC",
                            SellingPrice = 1258078m,
                            SizeOfHouse = 4651.0
                        },
                        new
                        {
                            PropertyID = 5,
                            Bathrooms = 1,
                            Bedrooms = 5,
                            BuildYear = 1984,
                            City = "Langley",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful Townhouse in a great neighborhood. Built in 2003.",
                            ListingDate = new DateTime(2025, 4, 12, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8860),
                            OwnerCustomerID = 3,
                            PostalCode = "V4J1J9",
                            PropertyAddress = "5736 T Ave",
                            PropertyType = "House",
                            Province = "BC",
                            RentalPrice = 4417m,
                            SizeOfHouse = 4922.0
                        },
                        new
                        {
                            PropertyID = 6,
                            Bathrooms = 2,
                            Bedrooms = 2,
                            BuildYear = 1980,
                            City = "Burnaby",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Apartment in a great neighborhood. Built in 2014.",
                            ListingDate = new DateTime(2025, 4, 5, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8890),
                            OwnerCustomerID = 18,
                            PostalCode = "V1V9U9",
                            PropertyAddress = "6306 U Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            SellingPrice = 939459m,
                            SizeOfHouse = 2693.0
                        },
                        new
                        {
                            PropertyID = 7,
                            Bathrooms = 3,
                            Bedrooms = 4,
                            BuildYear = 2022,
                            City = "North Vancouver",
                            Country = "Canada",
                            CurrentStatus = "For Rent",
                            Description = "Beautiful House in a great neighborhood. Built in 2009.",
                            ListingDate = new DateTime(2025, 4, 10, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8900),
                            OwnerCustomerID = 2,
                            PostalCode = "V7F6Z3",
                            PropertyAddress = "8660 I Ave",
                            PropertyType = "Townhouse",
                            Province = "BC",
                            RentalPrice = 2386m,
                            SizeOfHouse = 4881.0
                        },
                        new
                        {
                            PropertyID = 8,
                            Bathrooms = 4,
                            Bedrooms = 2,
                            BuildYear = 2017,
                            City = "New Westminster",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Townhouse in a great neighborhood. Built in 2002.",
                            ListingDate = new DateTime(2025, 4, 12, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8910),
                            OwnerCustomerID = 11,
                            PostalCode = "V6Z1R3",
                            PropertyAddress = "1060 W Ave",
                            PropertyType = "Duplex",
                            Province = "BC",
                            SellingPrice = 1041392m,
                            SizeOfHouse = 2732.0
                        },
                        new
                        {
                            PropertyID = 9,
                            Bathrooms = 2,
                            Bedrooms = 5,
                            BuildYear = 1993,
                            City = "New Westminster",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful House in a great neighborhood. Built in 2020.",
                            ListingDate = new DateTime(2025, 3, 23, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8910),
                            OwnerCustomerID = 8,
                            PostalCode = "V9P1Z1",
                            PropertyAddress = "2528 R Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            RentalPrice = 1774m,
                            SizeOfHouse = 4368.0
                        },
                        new
                        {
                            PropertyID = 10,
                            Bathrooms = 4,
                            Bedrooms = 4,
                            BuildYear = 1988,
                            City = "West Vancouver",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful House in a great neighborhood. Built in 1981.",
                            ListingDate = new DateTime(2025, 4, 9, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8920),
                            OwnerCustomerID = 20,
                            PostalCode = "V8D1I8",
                            PropertyAddress = "2242 Z Ave",
                            PropertyType = "Duplex",
                            Province = "BC",
                            SellingPrice = 447528m,
                            SizeOfHouse = 3491.0
                        },
                        new
                        {
                            PropertyID = 11,
                            Bathrooms = 1,
                            Bedrooms = 2,
                            BuildYear = 1991,
                            City = "West Vancouver",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful Duplex in a great neighborhood. Built in 1985.",
                            ListingDate = new DateTime(2025, 4, 5, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8930),
                            OwnerCustomerID = 16,
                            PostalCode = "V2U1S1",
                            PropertyAddress = "6054 T Ave",
                            PropertyType = "Townhouse",
                            Province = "BC",
                            RentalPrice = 4942m,
                            SizeOfHouse = 4851.0
                        },
                        new
                        {
                            PropertyID = 12,
                            Bathrooms = 1,
                            Bedrooms = 5,
                            BuildYear = 2007,
                            City = "North Vancouver",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Condo in a great neighborhood. Built in 2000.",
                            ListingDate = new DateTime(2025, 3, 19, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8930),
                            OwnerCustomerID = 12,
                            PostalCode = "V3M6X9",
                            PropertyAddress = "8150 C Ave",
                            PropertyType = "Duplex",
                            Province = "BC",
                            SellingPrice = 1673352m,
                            SizeOfHouse = 2669.0
                        },
                        new
                        {
                            PropertyID = 13,
                            Bathrooms = 2,
                            Bedrooms = 4,
                            BuildYear = 1985,
                            City = "New Westminster",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful Condo in a great neighborhood. Built in 2021.",
                            ListingDate = new DateTime(2025, 3, 30, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8940),
                            OwnerCustomerID = 15,
                            PostalCode = "V2H4X8",
                            PropertyAddress = "4009 A Ave",
                            PropertyType = "Townhouse",
                            Province = "BC",
                            RentalPrice = 4166m,
                            SizeOfHouse = 1947.0
                        },
                        new
                        {
                            PropertyID = 14,
                            Bathrooms = 1,
                            Bedrooms = 1,
                            BuildYear = 2020,
                            City = "Richmond",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Condo in a great neighborhood. Built in 1984.",
                            ListingDate = new DateTime(2025, 4, 14, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8950),
                            OwnerCustomerID = 18,
                            PostalCode = "V7U7S5",
                            PropertyAddress = "7705 P Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            SellingPrice = 437304m,
                            SizeOfHouse = 1080.0
                        },
                        new
                        {
                            PropertyID = 15,
                            Bathrooms = 2,
                            Bedrooms = 3,
                            BuildYear = 2011,
                            City = "Coquitlam",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Duplex in a great neighborhood. Built in 1990.",
                            ListingDate = new DateTime(2025, 4, 11, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8950),
                            OwnerCustomerID = 14,
                            PostalCode = "V2M2W3",
                            PropertyAddress = "2186 R Ave",
                            PropertyType = "Townhouse",
                            Province = "BC",
                            SellingPrice = 1772822m,
                            SizeOfHouse = 1007.0
                        },
                        new
                        {
                            PropertyID = 16,
                            Bathrooms = 3,
                            Bedrooms = 1,
                            BuildYear = 2018,
                            City = "Langley",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Condo in a great neighborhood. Built in 1980.",
                            ListingDate = new DateTime(2025, 4, 8, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8960),
                            OwnerCustomerID = 4,
                            PostalCode = "V9I1O3",
                            PropertyAddress = "7694 R Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            SellingPrice = 1929638m,
                            SizeOfHouse = 4018.0
                        },
                        new
                        {
                            PropertyID = 17,
                            Bathrooms = 2,
                            Bedrooms = 1,
                            BuildYear = 1986,
                            City = "Langley",
                            Country = "Canada",
                            CurrentStatus = "For Rent",
                            Description = "Beautiful Townhouse in a great neighborhood. Built in 1986.",
                            ListingDate = new DateTime(2025, 3, 18, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8970),
                            OwnerCustomerID = 6,
                            PostalCode = "V1E1W3",
                            PropertyAddress = "8166 J Ave",
                            PropertyType = "Apartment",
                            Province = "BC",
                            RentalPrice = 3324m,
                            SizeOfHouse = 4997.0
                        },
                        new
                        {
                            PropertyID = 18,
                            Bathrooms = 3,
                            Bedrooms = 1,
                            BuildYear = 1999,
                            City = "Delta",
                            Country = "Canada",
                            CurrentStatus = "For Sale",
                            Description = "Beautiful House in a great neighborhood. Built in 2007.",
                            ListingDate = new DateTime(2025, 4, 6, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8980),
                            OwnerCustomerID = 15,
                            PostalCode = "V2J5B1",
                            PropertyAddress = "6410 J Ave",
                            PropertyType = "Condo",
                            Province = "BC",
                            SellingPrice = 633776m,
                            SizeOfHouse = 3601.0
                        },
                        new
                        {
                            PropertyID = 19,
                            Bathrooms = 4,
                            Bedrooms = 4,
                            BuildYear = 2019,
                            City = "Richmond",
                            Country = "Canada",
                            CurrentStatus = "Rented",
                            Description = "Beautiful Condo in a great neighborhood. Built in 1985.",
                            ListingDate = new DateTime(2025, 3, 18, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8980),
                            OwnerCustomerID = 12,
                            PostalCode = "V6D2M5",
                            PropertyAddress = "9151 I Ave",
                            PropertyType = "Apartment",
                            Province = "BC",
                            RentalPrice = 3235m,
                            SizeOfHouse = 1863.0
                        },
                        new
                        {
                            PropertyID = 20,
                            Bathrooms = 3,
                            Bedrooms = 2,
                            BuildYear = 2019,
                            City = "West Vancouver",
                            Country = "Canada",
                            CurrentStatus = "Sold",
                            Description = "Beautiful Duplex in a great neighborhood. Built in 2017.",
                            ListingDate = new DateTime(2025, 3, 27, 12, 32, 58, 796, DateTimeKind.Local).AddTicks(8990),
                            OwnerCustomerID = 7,
                            PostalCode = "V1K6W1",
                            PropertyAddress = "8745 N Ave",
                            PropertyType = "Duplex",
                            Province = "BC",
                            SellingPrice = 1675273m,
                            SizeOfHouse = 2575.0
                        });
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.PropertyAmenities", b =>
                {
                    b.Property<int>("PropertyAmenitiesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AirConditioning")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cooktop")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Dishwasher")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Dryer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Elevator")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FireSprinklerSystem")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FitnessRoom")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Heating")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Locker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Microwave")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtherAmenities")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ParkingLot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Refrigerator")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SecuritySystem")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SwimmingPool")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Washer")
                        .HasColumnType("INTEGER");

                    b.HasKey("PropertyAmenitiesID");

                    b.HasIndex("PropertyID")
                        .IsUnique();

                    b.ToTable("PropertyAmenities");

                    b.HasData(
                        new
                        {
                            PropertyAmenitiesID = 1,
                            AirConditioning = false,
                            Cooktop = false,
                            Dishwasher = false,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = false,
                            PropertyID = 1,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = true,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 2,
                            AirConditioning = false,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = true,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = false,
                            Microwave = true,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = true,
                            PetFriendly = false,
                            PropertyID = 2,
                            Refrigerator = false,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 3,
                            AirConditioning = true,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = false,
                            Heating = true,
                            Locker = true,
                            Microwave = true,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = true,
                            PetFriendly = false,
                            PropertyID = 3,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = true,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 4,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = false,
                            PropertyID = 4,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 5,
                            AirConditioning = true,
                            Cooktop = false,
                            Dishwasher = false,
                            Dryer = false,
                            Elevator = true,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = false,
                            Locker = true,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = true,
                            PropertyID = 5,
                            Refrigerator = false,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 6,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = true,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 6,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 7,
                            AirConditioning = true,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = true,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = true,
                            Locker = true,
                            Microwave = true,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = true,
                            PropertyID = 7,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 8,
                            AirConditioning = true,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = false,
                            Locker = true,
                            Microwave = false,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 8,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = false,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 9,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = true,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = true,
                            Microwave = true,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = true,
                            PropertyID = 9,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 10,
                            AirConditioning = true,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = true,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = false,
                            Locker = false,
                            Microwave = true,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 10,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 11,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = true,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 11,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = true,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 12,
                            AirConditioning = false,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 12,
                            Refrigerator = true,
                            SecuritySystem = true,
                            SwimmingPool = false,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 13,
                            AirConditioning = false,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = true,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 13,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = true,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 14,
                            AirConditioning = true,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 14,
                            Refrigerator = false,
                            SecuritySystem = true,
                            SwimmingPool = false,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 15,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = false,
                            Dryer = true,
                            Elevator = true,
                            FireSprinklerSystem = true,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = false,
                            Microwave = true,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 15,
                            Refrigerator = false,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 16,
                            AirConditioning = true,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = true,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 16,
                            Refrigerator = false,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 17,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = false,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = true,
                            PetFriendly = true,
                            PropertyID = 17,
                            Refrigerator = false,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 18,
                            AirConditioning = false,
                            Cooktop = true,
                            Dishwasher = true,
                            Dryer = true,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = false,
                            Heating = true,
                            Locker = false,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = true,
                            PetFriendly = false,
                            PropertyID = 18,
                            Refrigerator = false,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = true
                        },
                        new
                        {
                            PropertyAmenitiesID = 19,
                            AirConditioning = false,
                            Cooktop = false,
                            Dishwasher = false,
                            Dryer = true,
                            Elevator = false,
                            FireSprinklerSystem = false,
                            FitnessRoom = true,
                            Heating = true,
                            Locker = true,
                            Microwave = false,
                            OtherAmenities = "",
                            ParkingLot = false,
                            PetFriendly = true,
                            PropertyID = 19,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = true,
                            Washer = false
                        },
                        new
                        {
                            PropertyAmenitiesID = 20,
                            AirConditioning = true,
                            Cooktop = false,
                            Dishwasher = true,
                            Dryer = false,
                            Elevator = false,
                            FireSprinklerSystem = true,
                            FitnessRoom = true,
                            Heating = false,
                            Locker = true,
                            Microwave = true,
                            OtherAmenities = "Close to public transport, shopping center nearby",
                            ParkingLot = true,
                            PetFriendly = true,
                            PropertyID = 20,
                            Refrigerator = true,
                            SecuritySystem = false,
                            SwimmingPool = false,
                            Washer = false
                        });
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.RentalContract", b =>
                {
                    b.Property<int>("RentalContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DepositPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerCustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RentalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TenantCustomerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentalContractID");

                    b.HasIndex("OwnerCustomerID");

                    b.HasIndex("PropertyID");

                    b.HasIndex("TenantCustomerID");

                    b.ToTable("RentalContracts");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.SalesContract", b =>
                {
                    b.Property<int>("SalesContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerCustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerCustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("SalesContractID");

                    b.HasIndex("BuyerCustomerID");

                    b.HasIndex("OwnerCustomerID");

                    b.HasIndex("PropertyID");

                    b.ToTable("SalesContracts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Image", b =>
                {
                    b.HasOne("RealEstateAgencySystem.Models.Property", "Property")
                        .WithMany("Images")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Property", b =>
                {
                    b.HasOne("RealEstateAgencySystem.Models.Customer", "Owner")
                        .WithMany("OwnedProperties")
                        .HasForeignKey("OwnerCustomerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.PropertyAmenities", b =>
                {
                    b.HasOne("RealEstateAgencySystem.Models.Property", "Property")
                        .WithOne("PropertyAmenities")
                        .HasForeignKey("RealEstateAgencySystem.Models.PropertyAmenities", "PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.RentalContract", b =>
                {
                    b.HasOne("RealEstateAgencySystem.Models.Customer", "OwnerCustomer")
                        .WithMany("RentalsAsOwner")
                        .HasForeignKey("OwnerCustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateAgencySystem.Models.Property", "Property")
                        .WithMany("RentalContracts")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateAgencySystem.Models.Customer", "TenantCustomer")
                        .WithMany("RentalsAsTenant")
                        .HasForeignKey("TenantCustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OwnerCustomer");

                    b.Navigation("Property");

                    b.Navigation("TenantCustomer");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.SalesContract", b =>
                {
                    b.HasOne("RealEstateAgencySystem.Models.Customer", "BuyerCustomer")
                        .WithMany("SalesAsBuyer")
                        .HasForeignKey("BuyerCustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateAgencySystem.Models.Customer", "OwnerCustomer")
                        .WithMany("SalesAsOwner")
                        .HasForeignKey("OwnerCustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateAgencySystem.Models.Property", "Property")
                        .WithMany("SalesContracts")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuyerCustomer");

                    b.Navigation("OwnerCustomer");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Customer", b =>
                {
                    b.Navigation("OwnedProperties");

                    b.Navigation("RentalsAsOwner");

                    b.Navigation("RentalsAsTenant");

                    b.Navigation("SalesAsBuyer");

                    b.Navigation("SalesAsOwner");
                });

            modelBuilder.Entity("RealEstateAgencySystem.Models.Property", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("PropertyAmenities")
                        .IsRequired();

                    b.Navigation("RentalContracts");

                    b.Navigation("SalesContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
